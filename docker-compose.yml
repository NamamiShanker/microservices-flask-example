version: "3.7"

services:
  db:
    image: postgres
    container_name: db
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
      - ./data/pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=userdb,interactiondb,contentdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5400:5432"
    restart: always
    networks:
      - default

  redis:
    image: redis
    container_name: redis
    expose:
      - "6379"
    restart: always
    networks:
      - default

  user_api:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: user_api
    volumes:
      - ./users:/usr/src/app
    environment:
      - FLASK_APP=manage.py
    depends_on:
      - db
      - redis
    expose:
      - "5000"
    ports:
      - "5001:5000"
    command: ["bash", "start-Docker.sh"]
    networks:
      - default

  content_api:
    build:
      context: ./content
      dockerfile: Dockerfile
    container_name: content_api
    volumes:
      - ./content:/usr/src/app
    environment:
      - FLASK_APP=manage.py
    depends_on:
      - db
      - redis
    expose:
      - "5000"
    ports:
      - "5002:5000"
    command: ["bash", "start-Docker.sh"]
    networks:
      - default

  interaction_api:
    build:
      context: ./interaction
      dockerfile: Dockerfile
    container_name: interaction_api
    volumes:
      - ./interaction:/usr/src/app
    environment:
      - FLASK_APP=manage.py
    depends_on:
      - db
      - redis
    expose:
      - "5000"
    ports:
      - "5003:5000"
    command: ["bash", "start-Docker.sh"]
    networks:
      - default

  swagger_ui:
    image: swaggerapi/swagger-ui
    container_name: swagger_ui
    expose:
      - "8080"
    volumes:
      - ./swagger/openapi.json:/openapi.json
    environment:
      - SWAGGER_JSON=/openapi.json
      - BASE_URL=/docs
    networks:
      - default

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - user_api
      - content_api
    networks:
      - default

networks:
  default:
    driver: bridge